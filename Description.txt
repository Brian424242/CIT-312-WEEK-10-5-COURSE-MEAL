I set the main div as a "container" first, so that I could use bootstrap within this div. I added the code that needs to be added in order to have bootstrap function. Then I set up two rows. The rows needed a bit of padding so I added some using inline CSS. 

I added two column divs to the top row, and three column divs to the bottom row. I set both divs to col-xx-12 for the default, small, and medium breakpoints. This ensured that the columns would take up the entire width of the container when those breakpoints were hit, and as a result, would stack upon each other. I set both of these columns at col-lg-6, so that when the screen hits the large breakpoint, the columns no longer stack, but instead display side-by-side and with equal width. Lastly, I set these two divs for different widths at the xl breakpoint; the first is set at col-xl-7, and the second at col-xl-5. This ensures that the columns display at a slightly offset width when the screen hits the xl breakpoint or higher.

The second row was very similar, the largest difference being that this time there are three columns instead of two. The columns still stack at the default, small, and medium breakpoints. I added an xxl breakpoint with this row, as I was running into trouble with image overlap. At the xxl breakpoint, the columns display at tapered widths, but at anything below that they either share the space equally (col-xx-4) or stack.

After this, I went back and added the header tags. I added some internal style for the header, as well as the divs within the rows. I added a class, columnFlex, to ensure that the two divs within each column would present the way that I wanted them to.

Finally, I added @media styling for the header specifically. I almost just used another container for the header and set it at container-fluid, but I wanted to be able to alter the font size, so I opted for the @media route. I added three breakpoints at which the header font changes size. The margin for the background color changes at these breakpoints as well.